[{"C:\\lol\\client\\src\\index.js":"1","C:\\lol\\client\\src\\App.js":"2","C:\\lol\\client\\src\\reportWebVitals.js":"3","C:\\lol\\client\\src\\Jugadores.js":"4","C:\\lol\\client\\src\\PagPrincipal.js":"5","C:\\lol\\client\\src\\Campeones.js":"6","C:\\lol\\client\\src\\config.js":"7","C:\\lol\\client\\src\\tresd.js":"8","C:\\lol\\client\\src\\Tresd.js":"9","C:\\lol\\client\\src\\Cofres.js":"10"},{"size":650,"mtime":1652799086829,"results":"11","hashOfConfig":"12"},{"size":917,"mtime":1653161936425,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1652799086831,"results":"14","hashOfConfig":"12"},{"size":14102,"mtime":1655671221780,"results":"15","hashOfConfig":"12"},{"size":9955,"mtime":1655610760362,"results":"16","hashOfConfig":"12"},{"size":5464,"mtime":1655610760360,"results":"17","hashOfConfig":"12"},{"size":111,"mtime":1655657016927,"results":"18","hashOfConfig":"12"},{"size":4008,"mtime":1652753594209,"results":"19","hashOfConfig":"12"},{"size":4008,"mtime":1652799086783,"results":"20","hashOfConfig":"12"},{"size":1652,"mtime":1653161936427,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"omwrgg",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"26"},"C:\\lol\\client\\src\\index.js",["57"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Tresd from './Tresd.js';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n//ReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\lol\\client\\src\\App.js",[],[],"C:\\lol\\client\\src\\reportWebVitals.js",[],[],"C:\\lol\\client\\src\\Jugadores.js",["58","59","60","61","62","63","64","65","66","67","68","69"],[],"import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport IRON from './images/IRON.png';\r\nimport BRONZE from './images/BRONZE.png';\r\nimport SILVER from './images/SILVER.png';\r\nimport GOLD from './images/GOLD.png';\r\nimport PLATINUM from './images/PLATINUM.png';\r\nimport DIAMOND from './images/DIAMOND.png';\r\nimport MASTER from './images/MASTER.png';\r\nimport GRANDMASTER from './images/GRANDMASTER.png';\r\nimport CHALLENGER from './images/CHALLENGER.png';\r\nimport { useParams } from 'react-router-dom';\r\nimport { BooleanKeyframeTrack } from 'three';\r\nimport {\r\n  Chart\r\n} from 'chart.js';\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\n\r\nconst config = require('./config.js');\r\n\r\nfunction Jugadores({ match, history }) {\r\n  \r\n  const apikey = config.API_KEY ;\r\n  \r\n  const [gameList, setGameList] = useState([]); \r\n  const [loading, setLoading] = useState(0);\r\n  const [partida,actual] = useState([]);\r\n  const [playerDataRank, setPlayerDataRank] = useState([]);\r\n  const [playerData, setPlayerData] = useState([]);\r\n  const [regiom, setRegion] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [summonerId, setId] = useState(\"\");\r\n  const {suNombre} = useParams();\r\n  const {suRegion} = useParams();\r\n  const [ca, setChamps] = useState([]);\r\n  const [jug, setJug] = useState([]);\r\n  const [mastery, setMastery] = useState([]);\r\n  const [lbl, setLabels] = useState([]);\r\n  const [datos, setData] = useState([]);\r\n  const [lbl2, setLabels2] = useState([]);\r\n  const [datos2, setData2] = useState([]);\r\n  const [lbl3, setLabels3] = useState([]);\r\n  const [datos3, setData3] = useState([]);\r\n  const [lbl4, setLabels4] = useState([]);\r\n  const [datos4, setData4] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  var arr = [];\r\n\r\n\r\n  const elnombre = {suNombre}.suNombre;\r\n  const laregion = {suRegion}.suRegion;\r\n\r\n  function elo(tier){\r\n    switch(tier){\r\n      case \"IRON\":\r\n        return IRON;\r\n      case \"BRONZE\":\r\n        return BRONZE;\r\n      case \"SILVER\":\r\n        return SILVER;\r\n      case \"GOLD\":\r\n        return GOLD;\r\n      case \"PLATINUM\":\r\n        return PLATINUM;\r\n      case \"DIAMOND\":\r\n        return DIAMOND;  \r\n      case \"MASTER\":\r\n        return MASTER;\r\n      case \"GRANDMASTER\":\r\n        return GRANDMASTER;\r\n      case \"CHALLENGER\":\r\n        return CHALLENGER;\r\n      default: break;\r\n    }\r\n  }\r\n  function cambio(ide){\r\n    switch(ide){\r\n      case \"false\":\r\n          return \"#f93034\";\r\n      case \"true\":\r\n          return \"lightblue\";\r\n  }\r\n  } \r\n  function camp(championId){\r\n    for(var x in ca){\r\n         if(String(ca[x][1])==String(championId)){\r\n\r\n         return String(ca[x][0])\r\n     \r\n     }\r\n    }\r\n  }\r\n  const handleAdd = (dato) => {\r\n   if(count<11){  \r\n   arr.push(dato);\r\n \r\n    let result = arr.filter((item,index)=>{\r\n      return arr.indexOf(item) === index;\r\n    })\r\n \r\n    setJug(result);\r\n    setCount(count + 1);\r\n \r\n   }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n     async function loadData() {\r\n      setLoading(1);\r\n\r\n        var call = \"https://\"+laregion+\".api.riotgames.com/lol/summoner/v4/summoners/by-name/\"+elnombre+\"?api_key=\"+apikey;\r\n          axios.get(call).then(function(response){\r\n          setPlayerData(response.data);\r\n          setId(response.data.id);\r\n         })\r\n         .catch(function(error){\r\n          console.log(error);\r\n        });\r\n\r\n        var call2 = \"https://\"+laregion+\".api.riotgames.com/lol/spectator/v4/active-games/by-summoner/\"+summonerId;\r\n        \r\n\r\n        axios.get(\"http://localhost:4000/rank/\"+elnombre+\"/\"+laregion)\r\n        .then(function(response){\r\n             setPlayerDataRank(response.data);\r\n        })\r\n        .catch(function(error){\r\n             console.log(error);\r\n        });\r\n        \r\n        axios.get(\"http://localhost:4000/partida/\"+elnombre+\"/\"+laregion)\r\n        .then(function(response){\r\n             actual(response.data);\r\n        })\r\n        .catch(function(error){\r\n             console.log(error);\r\n        });\r\n\r\n        axios.get(\"http://localhost:4000/match/\"+elnombre+\"/\"+laregion)\r\n        .then(function(response){\r\n             setGameList(response.data);\r\n        })\r\n        .catch(function(error){\r\n             console.log(error);\r\n        }); \r\n        \r\n        axios.get(\"http://localhost:4000/campeonkey/\")\r\n        .then(function(response){\r\n             setChamps(response.data);\r\n        })\r\n        .catch(function(error){\r\n             console.log(error);\r\n        }); \r\n\r\n        axios.get(\"http://localhost:4000/mastery/\"+elnombre+\"/\"+laregion)\r\n        .then(function(response){\r\n             setMastery(response.data);\r\n        })\r\n        .catch(function(error){\r\n             console.log(error);\r\n        }); \r\n              \r\n       if(jug.length>1){\r\n        for(var i in jug){\r\n        var call4= \"https://\"+laregion+\".api.riotgames.com/lol/champion-mastery/v4/champion-masteries/by-summoner/\"+jug[i]+\"?api_key=\"+apikey;\r\n        axios.get(call4).then(function(response){\r\n          setMastery(response.data)    \r\n         })\r\n         .catch(function(error){\r\n          console.log(error);\r\n          \r\n        });\r\n      }\r\n      }\r\n\r\n      axios.get(\"http://localhost:4000/cienPartidas/\"+elnombre+\"/\"+laregion)\r\n        .then(function(response){\r\n                setLabels([response.data[0][0][response.data[0][0].length - 1],response.data[0][1][response.data[0][1].length - 1],response.data[0][2][response.data[0][2].length - 1]]);\r\n                setData(response.data[1]);\r\n                setLabels2(response.data[2]);\r\n                setData2(response.data[3]);\r\n                setLabels3(response.data[4]);\r\n                setData3(response.data[5]);\r\n                setLabels4(response.data[6]);\r\n                setData4(response.data[7]);\r\n        })\r\n        .catch(function(error){\r\n                console.log(error);\r\n        }); \r\n\r\n\r\n        setLoading(0);\r\n      }\r\n      loadData();\r\n\r\n      }, [])\r\n\r\n  \r\n        \r\n    \r\n      \r\n      return (\r\n        <div className=\"Jugadores\">\r\n        <div style={{float: 'right'}}>\r\n\r\n        <Plot\r\n           data={[\r\n                { type: \"bar\", \r\n                  x: lbl, \r\n                  y: datos,\r\n                  marker: { color: 'rgb(23,24,25)'}\r\n                  },\r\n                ]}\r\n           layout={{ width: 640, height: 480, title: \"Tres campeones más jugados en las últimas 40 partidas y su winrate\"}}\r\n        />\r\n         <Plot\r\n           data={[\r\n                { type: \"pie\", \r\n                  labels: lbl2, \r\n                  values: datos2,\r\n                  marker: {\r\n                    colors: ['rgb(0, 0, 128)', 'rgb(199, 0, 57)', 'rgb(212, 172, 13)', 'rgb(29, 131, 72 )', 'rgb(120, 66, 18)', 'rgb(23, 32, 42)']\r\n                  }\r\n                  },\r\n                ]}\r\n           layout={{ width: 640, height: 480, title: \"Roles jugados en las últimas 40 partidas\"}}\r\n          />\r\n        <Plot\r\n           data={[\r\n                { type: \"bar\", \r\n                  x: lbl3, \r\n                  y: datos3,\r\n                  marker: { color: 'rgb(23,24,25)'}\r\n                  },\r\n                ]}\r\n           layout={{ width: 640, height: 480, title: \"Tres campeones con los mejores promedios de kda de las ultimas 40 partidas\"}}\r\n        />\r\n         <Plot\r\n           data={[\r\n                { type: \"bar\", \r\n                  x: lbl4, \r\n                  y: datos4,\r\n                  marker: { color: 'rgb(23,24,25)'}\r\n                  },\r\n                ]}\r\n           layout={{ width: 640, height: 480, title: \"Tres campeones con los mejores promedios de kills de las ultimas 40 partidas\"}}\r\n        />\r\n        </div>\r\n    \r\n\r\n       <input type=\"text\" onChange={e => setSearchText(e.target.value)} ></input>\r\n          <select onChange={e => setRegion(e.target.value)}>\r\n\r\n             <option value=\"br1\">BRASIL</option>\r\n             <option value=\"kr\">COREA</option>\r\n             <option value=\"eun1\">EUROPA NÓRDICA Y ESTE</option>\r\n             <option value=\"euw1\">EUROPA OESTE</option>\r\n             <option value=\"jp1\">JAPÓN</option>\r\n             <option value=\"la1\">LATINOAMÉRICA NORTE</option>\r\n             <option value=\"la2\">LATINOAMÉRICA SUR</option>\r\n             <option value=\"na1\">NORTEAMÉRICA</option>\r\n             <option value=\"oc1\">OCEANÍA</option>\r\n             <option value=\"ru\">RUSIA</option>\r\n             <option value=\"tr1\">TURQUÍA</option> \r\n          </select>\r\n          <div className=\"container\">\r\n          <a href={`../${searchText}/${regiom}`} ><button >Buscar un jugador</button></a>\r\n\r\n          </div>\r\n\r\n\r\n          <div style={{display: 'flex', justifyContent: 'center', display: 'grid', 'grid-template-columns' : 'repeat(2,1fr)'}}>\r\n          \r\n           {JSON.stringify(playerData) !== \"{}\" ? <>\r\n           <div style={{display: 'flex', justifyContent: 'right'}}>\r\n          \r\n           <img width=\"140\" height=\"140\" src={\"http://ddragon.leagueoflegends.com/cdn/12.8.1/img/profileicon/\"+ playerData.profileIconId+\".png\" } alt=\"no has buscado jugador\"></img>\r\n           <p><h1> {playerData.name}</h1><h5> Nivel {playerData.summonerLevel}</h5> </p>    \r\n           </div> \r\n           </>\r\n           :\r\n            <><p style={{display: 'flex', justifyContent: 'center'}} >no tenemos datos del jugador</p></>\r\n           }\r\n\r\n          {JSON.stringify(playerDataRank) == '\"{}\"'  ? <>\r\n          <h3 style={{display: 'flex', justifyContent: 'center'}} > Este invocador no rankea</h3>\r\n           </>\r\n           :\r\n           <>\r\n             <div style={{display: 'flex', justifyContent: 'left'}}>\r\n          <img height=\"140\" width=\"140\" src={elo(playerDataRank.tier)} alt=\"no rankea\"></img>\r\n                <p><h3>{playerDataRank.tier} {playerDataRank.rank}  {playerDataRank.leaguePoints} PL</h3>\r\n                <h5>Winrate : {playerDataRank.winrate} % </h5>\r\n                </p>\r\n                </div>           \r\n           </>\r\n           }\r\n            </div>\r\n\r\n\r\n\r\n             {JSON.stringify(partida) !== '\"{}\"' ?\r\n                  <>\r\n               {\r\n              partida.map((partidaData,index) =>\r\n                <>\r\n                <div  style={{ display: 'grid', 'grid-template-columns' : 'repeat(5,1fr)'}}>\r\n\r\n                  {partidaData.participants.map((data,participantIndex)=>\r\n\r\n\r\n\r\n                      <div onLoad={handleAdd(data.summonerId)} style={{clear: 'both', display: 'flex', justifyContent: 'center', display: 'grid', 'grid-template-columns' : 'repeat(1,1fr)'}}>\r\n                        <img width=\"70\" height=\"70\" alt=\"champ\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/champion/${camp(data.championId)}.png`}></img>\r\n                        <br></br>\r\n                        <h4>{data.summonerName}</h4> \r\n                     \r\n                        \r\n                     \r\n\r\n                      </div>\r\n\r\n\r\n\r\n\r\n                     )\r\n                    }\r\n                  </div>\r\n           \r\n                </>\r\n              )\r\n                  \r\n           }\r\n           \r\n           </>\r\n           :\r\n           <>\r\n             <div style={{display: 'flex', justifyContent: 'center'}} >\r\n             <h3>Este invocador no está en una partida</h3>\r\n            \r\n            </div>\r\n          \r\n          </>\r\n               }\r\n        \r\n\r\n\r\n            \r\n           {gameList.length !==0 ?\r\n              <>\r\n               {\r\n                  gameList.map((gameData,index) =>\r\n                    <>\r\n                    <div style={{clear: 'both', display: 'flex', justifyContent: 'center'}}>\r\n                   \r\n                     <table class=\"default\">\r\n                     <h2> Partida {index +1}</h2>\r\n                      {gameData.info.participants.map((data,participantIndex)=> \r\n                      <tr style={{backgroundColor: cambio(String(data.win)), border: '10px solid', borderColor: `${cambio(String(data.win))}` }}>\r\n                      <th><img width=\"70\" height=\"70\" alt=\"champ\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/champion/${data.championName}.png`}></img></th>  \r\n  \r\n                      <td width=\"260\"><h4>{data.summonerName}</h4></td>\r\n                      <td><img width=\"25\" height=\"30\" alt=\"\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/item/${data.item0}.png`}></img>\r\n                      <img width=\"25\" height=\"30\" alt=\"\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/item/${data.item1}.png`}></img>\r\n                      <img width=\"25\" height=\"30\" alt=\"\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/item/${data.item2}.png`}></img>\r\n                      <img width=\"25\" height=\"30\" alt=\"\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/item/${data.item3}.png`}></img>\r\n                      <img width=\"25\" height=\"30\" alt=\"\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/item/${data.item4}.png`}></img>\r\n                      <img width=\"25\" height=\"30\" alt=\"\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/item/${data.item5}.png`}></img>\r\n                      <img width=\"25\" height=\"30\" alt=\"\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/item/${data.item6}.png`}></img>\r\n                      </td>\r\n                      <td width=\"150\"><h4>{data.kills}/{data.deaths}/{data.assists}</h4></td>\r\n                      <td> <img width=\"70\" height=\"70\" src={\"http://ddragon.leagueoflegends.com/cdn/12.8.1/img/profileicon/\"+ data.profileIcon+\".png\" } alt=\"icono\"></img></td>\r\n                      </tr>\r\n                      \r\n                      )\r\n                        }\r\n                     </table>\r\n                     </div>\r\n                    </>\r\n                  )\r\n                      \r\n               }\r\n               \r\n    \r\n              </>\r\n              :\r\n              <>\r\n               <p> no tenemos partidas</p>\r\n              </>\r\n           }\r\n        </div>\r\n\r\n       \r\n      );\r\n}\r\n    export default Jugadores;","C:\\lol\\client\\src\\PagPrincipal.js",["70","71"],[],"C:\\lol\\client\\src\\Campeones.js",["72"],[],"C:\\lol\\client\\src\\config.js",[],[],"C:\\lol\\client\\src\\tresd.js",["73"],[],"C:\\lol\\client\\src\\Tresd.js",["74"],[],"\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nfunction loadGLTFModel(scene, glbPath, options) {\r\n  const { receiveShadow, castShadow } = options;\r\n  return new Promise((resolve, reject) => {\r\n    const loader = new GLTFLoader();\r\n    loader.load(\r\n      glbPath,\r\n      (gltf) => {\r\n        const obj = gltf.scene;\r\n        obj.name = \"dinosaur\";\r\n        obj.position.y = 0;\r\n        obj.position.x = 0;\r\n        obj.receiveShadow = receiveShadow;\r\n        obj.castShadow = castShadow;\r\n        scene.add(obj);\r\n\r\n        obj.traverse(function (child) {\r\n          if (child.isMesh) {\r\n            child.castShadow = castShadow;\r\n            child.receiveShadow = receiveShadow;\r\n          }\r\n        });\r\n\r\n        resolve(obj);\r\n      },\r\n      undefined,\r\n      function (error) {\r\n        console.log(error);\r\n        reject(error);\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\nfunction easeOutCirc(x) {\r\n  return Math.sqrt(1 - Math.pow(x - 1, 4));\r\n}\r\n\r\nconst Dinosaur = () => {\r\n  const refContainer = useRef();\r\n  const [loading, setLoading] = useState(true);\r\n  const [renderer, setRenderer] = useState();\r\n\r\n  useEffect(() => {\r\n    const { current: container } = refContainer;\r\n    if (container && !renderer) {\r\n      const scW = container.clientWidth;\r\n      const scH = container.clientHeight;\r\n      const renderer = new THREE.WebGLRenderer({\r\n        antialias: true,\r\n        alpha: true\r\n      });\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.setSize(scW, scH);\r\n      renderer.outputEncoding = THREE.sRGBEncoding;\r\n      container.appendChild(renderer.domElement);\r\n      setRenderer(renderer);\r\n\r\n      const scene = new THREE.Scene();\r\n      const scale = 5.6;\r\n      const camera = new THREE.OrthographicCamera(\r\n        -scale,\r\n        scale,\r\n        scale,\r\n        -scale,\r\n        0.01,\r\n        50000\r\n      );\r\n      const target = new THREE.Vector3(-0.5, 1.2, 0);\r\n      const initialCameraPosition = new THREE.Vector3(\r\n        20 * Math.sin(0.2 * Math.PI),\r\n        10,\r\n        20 * Math.cos(0.2 * Math.PI)\r\n      );\r\n      const ambientLight = new THREE.AmbientLight(0xcccccc, 1);\r\n      scene.add(ambientLight);\r\n      const controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.autoRotate = true;\r\n      controls.target = target;\r\n\r\n      loadGLTFModel(scene, \"/Dinosaur.glb\", {\r\n        receiveShadow: false,\r\n        castShadow: false\r\n      }).then(() => {\r\n        animate();\r\n        setLoading(false);\r\n      });\r\n\r\n      let req = null;\r\n      let frame = 0;\r\n      const animate = () => {\r\n        req = requestAnimationFrame(animate);\r\n        frame = frame <= 100 ? frame + 1 : frame;\r\n\r\n        if (frame <= 100) {\r\n          const p = initialCameraPosition;\r\n          const rotSpeed = -easeOutCirc(frame / 120) * Math.PI * 20;\r\n\r\n          camera.position.y = 10;\r\n          camera.position.x =\r\n            p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed);\r\n          camera.position.z =\r\n            p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed);\r\n          camera.lookAt(target);\r\n        } else {\r\n          controls.update();\r\n        }\r\n\r\n        renderer.render(scene, camera);\r\n      };\r\n\r\n      return () => {\r\n        cancelAnimationFrame(req);\r\n        renderer.dispose();\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{ height: \"540px\", width: \"540px\", position: \"relative\" }}\r\n      ref={refContainer}\r\n    >\r\n      {loading && (\r\n        <span style={{ position: \"absolute\", left: \"50%\", top: \"50%\" }}>\r\n          Loading...\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function tresd() {\r\n  return (\r\n    <div style={{ width: \"100%\", margin: \"0 auto\" }}>\r\n      <p>Click para mover</p>\r\n      <p>\r\n        Modelo 3d.\r\n      </p>\r\n      <Dinosaur />\r\n    </div>\r\n  );\r\n}","C:\\lol\\client\\src\\Cofres.js",["75"],[],"import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Cofres() {\r\n\r\n    const {inv} = useParams();\r\n    const {region} = useParams();\r\n    const {search} = useParams();\r\n    const NombreInv = {inv}.inv;\r\n    const SubRegion = {region}.region;\r\n    const NombreCamp = {search}.search;\r\n\r\n    const Cofresito = () =>{\r\n\r\n        const [disp, setDisp] = useState(\"\");\r\n        const [yid, setYid] = useState(\"\");\r\n        const [cid, setCid] = useState(\"\");\r\n\r\n        useEffect(() => {\r\n            axios.get(\"http://localhost:4000/id/\"+NombreInv+\"/\"+SubRegion)\r\n            .then(function(response){\r\n                setYid(response.data)\r\n            });\r\n            \r\n            axios.get(\"http://localhost:4000/champ/\"+NombreCamp)\r\n            .then(function(response2){\r\n                setCid(response2.data.key)\r\n            });\r\n                \r\n            axios.get(\"http://localhost:4000/cofre/\"+SubRegion+\"/\"+yid+\"/\"+cid)\r\n            .then(function(response3){\r\n                console.log(response3.data)\r\n                if (response3.data.chestGranted == true){\r\n                    setDisp(\"Cofre No Disponible...\")\r\n                } else {\r\n                    setDisp(\"Cofre Disponible!!\")\r\n                }\r\n            });\r\n            \r\n        })\r\n\r\n        return (\r\n                <h1>{disp}</h1>\r\n        );\r\n\r\n\r\n    }\r\n    \r\n\r\n    return(\r\n        <div class=\"container\">\r\n            <Cofresito />\r\n        </div>\r\n    );\r\n}   \r\n        export default Cofres;",{"ruleId":"76","severity":1,"message":"77","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":13},{"ruleId":"76","severity":1,"message":"80","line":15,"column":10,"nodeType":"78","messageId":"79","endLine":15,"endColumn":30},{"ruleId":"76","severity":1,"message":"81","line":17,"column":3,"nodeType":"78","messageId":"79","endLine":17,"endColumn":8},{"ruleId":"76","severity":1,"message":"82","line":19,"column":10,"nodeType":"78","messageId":"79","endLine":19,"endColumn":13},{"ruleId":"76","severity":1,"message":"83","line":30,"column":10,"nodeType":"78","messageId":"79","endLine":30,"endColumn":17},{"ruleId":"76","severity":1,"message":"84","line":41,"column":10,"nodeType":"78","messageId":"79","endLine":41,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":81,"column":5,"nodeType":"87","messageId":"88","endLine":86,"endColumn":4},{"ruleId":"89","severity":1,"message":"90","line":90,"column":29,"nodeType":"91","messageId":"92","endLine":90,"endColumn":31},{"ruleId":"76","severity":1,"message":"93","line":126,"column":13,"nodeType":"78","messageId":"79","endLine":126,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":202,"column":10,"nodeType":"96","endLine":202,"endColumn":12,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":278,"column":67,"nodeType":"100","messageId":"92","endLine":278,"endColumn":74},{"ruleId":"89","severity":1,"message":"90","line":291,"column":43,"nodeType":"91","messageId":"92","endLine":291,"endColumn":45},{"ruleId":"98","severity":1,"message":"99","line":319,"column":130,"nodeType":"100","messageId":"92","endLine":319,"endColumn":137},{"ruleId":"76","severity":1,"message":"101","line":7,"column":10,"nodeType":"78","messageId":"79","endLine":7,"endColumn":19},{"ruleId":"76","severity":1,"message":"83","line":148,"column":12,"nodeType":"78","messageId":"79","endLine":148,"endColumn":19},{"ruleId":"94","severity":1,"message":"102","line":45,"column":12,"nodeType":"96","endLine":45,"endColumn":14,"suggestions":"103"},{"ruleId":"94","severity":1,"message":"104","line":122,"column":6,"nodeType":"96","endLine":122,"endColumn":8,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"104","line":122,"column":6,"nodeType":"96","endLine":122,"endColumn":8,"suggestions":"106"},{"ruleId":"89","severity":1,"message":"90","line":36,"column":49,"nodeType":"91","messageId":"92","endLine":36,"endColumn":51},"no-unused-vars","'Tresd' is defined but never used.","Identifier","unusedVar","'BooleanKeyframeTrack' is defined but never used.","'Chart' is defined but never used.","'Bar' is defined but never used.","'loading' is assigned a value but never used.","'mastery' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'call2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'apikey', 'elnombre', 'jug', 'laregion', and 'summonerId'. Either include them or remove the dependency array.","ArrayExpression",["107"],"no-dupe-keys","Duplicate key 'display'.","ObjectExpression","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'campeonId'. Either include it or remove the dependency array.",["108"],"React Hook useEffect has a missing dependency: 'renderer'. Either include it or remove the dependency array.",["109"],["110"],{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},"Update the dependencies array to be: [apikey, elnombre, jug, laregion, summonerId]",{"range":"118","text":"119"},"Update the dependencies array to be: [campeonId]",{"range":"120","text":"121"},"Update the dependencies array to be: [renderer]",{"range":"122","text":"123"},{"range":"124","text":"123"},[6051,6053],"[apikey, elnombre, jug, laregion, summonerId]",[1842,1844],"[campeonId]",[3489,3491],"[renderer]",[3489,3491]]