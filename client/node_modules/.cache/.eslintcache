[{"C:\\lol\\client\\src\\index.js":"1","C:\\lol\\client\\src\\App.js":"2","C:\\lol\\client\\src\\reportWebVitals.js":"3","C:\\lol\\client\\src\\Jugadores.js":"4","C:\\lol\\client\\src\\PagPrincipal.js":"5","C:\\lol\\client\\src\\Campeones.js":"6","C:\\lol\\client\\src\\config.js":"7","C:\\lol\\client\\src\\tresd.js":"8","C:\\lol\\client\\src\\Tresd.js":"9","C:\\lol\\client\\src\\Cofres.js":"10"},{"size":650,"mtime":1652799086829,"results":"11","hashOfConfig":"12"},{"size":917,"mtime":1653161936425,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1652799086831,"results":"14","hashOfConfig":"12"},{"size":11289,"mtime":1652994107506,"results":"15","hashOfConfig":"12"},{"size":9936,"mtime":1653161936430,"results":"16","hashOfConfig":"12"},{"size":5460,"mtime":1652799086779,"results":"17","hashOfConfig":"12"},{"size":264,"mtime":1653161936434,"results":"18","hashOfConfig":"12"},{"size":4008,"mtime":1652753594209,"results":"19","hashOfConfig":"12"},{"size":4008,"mtime":1652799086783,"results":"20","hashOfConfig":"12"},{"size":1652,"mtime":1653161936427,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"omwrgg",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"C:\\lol\\client\\src\\index.js",["57"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Tresd from './Tresd.js';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n//ReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\lol\\client\\src\\App.js",[],[],"C:\\lol\\client\\src\\reportWebVitals.js",[],[],"C:\\lol\\client\\src\\Jugadores.js",["58","59","60","61","62","63","64","65","66"],[],"C:\\lol\\client\\src\\PagPrincipal.js",["67","68"],[],"C:\\lol\\client\\src\\Campeones.js",["69"],[],"import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Campeones() {\r\n\r\n    const Dato = () =>{\r\n        const [infor, setInfor] = useState([]);\r\n        const [pasiva, setPasiva] = useState([]);\r\n        const [pimg, setPimg] = useState([]);\r\n        const [qname, setQname] = useState([])\r\n        const [qimg, setQimg] = useState([])\r\n        const [wname, setWname] = useState([])\r\n        const [wimg, setWimg] = useState([])\r\n        const [ename, setEname] = useState([])\r\n        const [eimg, setEimg] = useState([])\r\n        const [rname, setRname] = useState([])\r\n        const [rimg, setRimg] = useState([])\r\n        const {nCampeon} = useParams();\r\n        const campeonId = {nCampeon}.nCampeon;\r\n        console.log({nCampeon}.nCampeon);\r\n\r\n        useEffect(() => {\r\n    \r\n            axios.get(\"http://localhost:4000/champ/\"+campeonId)\r\n            .then(function(response){\r\n                console.log(response.data);\r\n                setInfor(response.data)\r\n                setPasiva(response.data.passive)\r\n                setPimg(response.data.passive.image)\r\n                setQname(response.data.spells[0]) //name\r\n                setQimg(response.data.spells[0].image) //full\r\n                setWname(response.data.spells[1]) //name\r\n                setWimg(response.data.spells[1].image) //full\r\n                setEname(response.data.spells[2]) //name\r\n                setEimg(response.data.spells[2].image) //full\r\n                setRname(response.data.spells[3]) //name\r\n                setRimg(response.data.spells[3].image) //full\r\n            })\r\n            .catch(function(error){\r\n                console.log(error);\r\n           });\r\n        }, [])\r\n\r\n        return (\r\n            <div>\r\n            <div class=\"masthead\" style={{backgroundImage: `url(\"http://ddragon.leagueoflegends.com/cdn/img/champion/splash/${infor.name}_0.jpg\")`}}></div>\r\n                <div class=\"camp\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-1\">\r\n                            <img width=\"100\" height=\"100\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/champion/${infor.id}.png`} alt=\"img\"></img>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <h1 class=\"text-white\">{infor.name}: {infor.title}</h1>\r\n                        </div>\r\n                    </div>\r\n                    <h3 class=\"text-white\">Historia</h3>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-7\">\r\n                            <p class=\"text-white\">{infor.lore}</p>\r\n                        </div>\r\n                    </div>\r\n                    <h3 class=\"text-white\">Habilidades</h3>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-1\" align=\"center\">\r\n                            <img width=\"30\" height=\"30\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/passive/${pimg.full}`} alt =\"img\"></img>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <p class=\"text-white\">Pasiva: {pasiva.name}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-1\" align=\"center\">\r\n                            <img width=\"30\" height=\"30\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/spell/${qimg.full}`} alt =\"img\"></img>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <p class=\"text-white\">Q: {qname.name}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-1\" align=\"center\">\r\n                            <img width=\"30\" height=\"30\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/spell/${wimg.full}`} alt =\"img\"></img>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <p class=\"text-white\">W: {wname.name}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-1\" align=\"center\">\r\n                            <img width=\"30\" height=\"30\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/spell/${eimg.full}`} alt =\"img\"></img>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <p class=\"text-white\">E: {ename.name}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-1\" align=\"center\">\r\n                            <img width=\"30\" height=\"30\" src={`http://ddragon.leagueoflegends.com/cdn/12.9.1/img/spell/${rimg.full}`} alt =\"img\"></img>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <p class=\"text-white\">R: {rname.name}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n    <div class=\"lul\">\r\n        <a href=\"../\"><button>Volver</button></a>\r\n        <div class=\"container\">\r\n            <Dato />\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n        export default Campeones;","C:\\lol\\client\\src\\config.js",[],[],"C:\\lol\\client\\src\\tresd.js",["70"],[],"C:\\lol\\client\\src\\Tresd.js",["71"],[],"\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nfunction loadGLTFModel(scene, glbPath, options) {\r\n  const { receiveShadow, castShadow } = options;\r\n  return new Promise((resolve, reject) => {\r\n    const loader = new GLTFLoader();\r\n    loader.load(\r\n      glbPath,\r\n      (gltf) => {\r\n        const obj = gltf.scene;\r\n        obj.name = \"dinosaur\";\r\n        obj.position.y = 0;\r\n        obj.position.x = 0;\r\n        obj.receiveShadow = receiveShadow;\r\n        obj.castShadow = castShadow;\r\n        scene.add(obj);\r\n\r\n        obj.traverse(function (child) {\r\n          if (child.isMesh) {\r\n            child.castShadow = castShadow;\r\n            child.receiveShadow = receiveShadow;\r\n          }\r\n        });\r\n\r\n        resolve(obj);\r\n      },\r\n      undefined,\r\n      function (error) {\r\n        console.log(error);\r\n        reject(error);\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\nfunction easeOutCirc(x) {\r\n  return Math.sqrt(1 - Math.pow(x - 1, 4));\r\n}\r\n\r\nconst Dinosaur = () => {\r\n  const refContainer = useRef();\r\n  const [loading, setLoading] = useState(true);\r\n  const [renderer, setRenderer] = useState();\r\n\r\n  useEffect(() => {\r\n    const { current: container } = refContainer;\r\n    if (container && !renderer) {\r\n      const scW = container.clientWidth;\r\n      const scH = container.clientHeight;\r\n      const renderer = new THREE.WebGLRenderer({\r\n        antialias: true,\r\n        alpha: true\r\n      });\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.setSize(scW, scH);\r\n      renderer.outputEncoding = THREE.sRGBEncoding;\r\n      container.appendChild(renderer.domElement);\r\n      setRenderer(renderer);\r\n\r\n      const scene = new THREE.Scene();\r\n      const scale = 5.6;\r\n      const camera = new THREE.OrthographicCamera(\r\n        -scale,\r\n        scale,\r\n        scale,\r\n        -scale,\r\n        0.01,\r\n        50000\r\n      );\r\n      const target = new THREE.Vector3(-0.5, 1.2, 0);\r\n      const initialCameraPosition = new THREE.Vector3(\r\n        20 * Math.sin(0.2 * Math.PI),\r\n        10,\r\n        20 * Math.cos(0.2 * Math.PI)\r\n      );\r\n      const ambientLight = new THREE.AmbientLight(0xcccccc, 1);\r\n      scene.add(ambientLight);\r\n      const controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.autoRotate = true;\r\n      controls.target = target;\r\n\r\n      loadGLTFModel(scene, \"/Dinosaur.glb\", {\r\n        receiveShadow: false,\r\n        castShadow: false\r\n      }).then(() => {\r\n        animate();\r\n        setLoading(false);\r\n      });\r\n\r\n      let req = null;\r\n      let frame = 0;\r\n      const animate = () => {\r\n        req = requestAnimationFrame(animate);\r\n        frame = frame <= 100 ? frame + 1 : frame;\r\n\r\n        if (frame <= 100) {\r\n          const p = initialCameraPosition;\r\n          const rotSpeed = -easeOutCirc(frame / 120) * Math.PI * 20;\r\n\r\n          camera.position.y = 10;\r\n          camera.position.x =\r\n            p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed);\r\n          camera.position.z =\r\n            p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed);\r\n          camera.lookAt(target);\r\n        } else {\r\n          controls.update();\r\n        }\r\n\r\n        renderer.render(scene, camera);\r\n      };\r\n\r\n      return () => {\r\n        cancelAnimationFrame(req);\r\n        renderer.dispose();\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{ height: \"540px\", width: \"540px\", position: \"relative\" }}\r\n      ref={refContainer}\r\n    >\r\n      {loading && (\r\n        <span style={{ position: \"absolute\", left: \"50%\", top: \"50%\" }}>\r\n          Loading...\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function tresd() {\r\n  return (\r\n    <div style={{ width: \"100%\", margin: \"0 auto\" }}>\r\n      <p>Click para mover</p>\r\n      <p>\r\n        Modelo 3d.\r\n      </p>\r\n      <Dinosaur />\r\n    </div>\r\n  );\r\n}","C:\\lol\\client\\src\\Cofres.js",["72"],[],"import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Cofres() {\r\n\r\n    const {inv} = useParams();\r\n    const {region} = useParams();\r\n    const {search} = useParams();\r\n    const NombreInv = {inv}.inv;\r\n    const SubRegion = {region}.region;\r\n    const NombreCamp = {search}.search;\r\n\r\n    const Cofresito = () =>{\r\n\r\n        const [disp, setDisp] = useState(\"\");\r\n        const [yid, setYid] = useState(\"\");\r\n        const [cid, setCid] = useState(\"\");\r\n\r\n        useEffect(() => {\r\n            axios.get(\"http://localhost:4000/id/\"+NombreInv+\"/\"+SubRegion)\r\n            .then(function(response){\r\n                setYid(response.data)\r\n            });\r\n            \r\n            axios.get(\"http://localhost:4000/champ/\"+NombreCamp)\r\n            .then(function(response2){\r\n                setCid(response2.data.key)\r\n            });\r\n                \r\n            axios.get(\"http://localhost:4000/cofre/\"+SubRegion+\"/\"+yid+\"/\"+cid)\r\n            .then(function(response3){\r\n                console.log(response3.data)\r\n                if (response3.data.chestGranted == true){\r\n                    setDisp(\"Cofre No Disponible...\")\r\n                } else {\r\n                    setDisp(\"Cofre Disponible!!\")\r\n                }\r\n            });\r\n            \r\n        })\r\n\r\n        return (\r\n                <h1>{disp}</h1>\r\n        );\r\n\r\n\r\n    }\r\n    \r\n\r\n    return(\r\n        <div class=\"container\">\r\n            <Cofresito />\r\n        </div>\r\n    );\r\n}   \r\n        export default Cofres;",{"ruleId":"73","severity":1,"message":"74","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":13},{"ruleId":"73","severity":1,"message":"77","line":22,"column":10,"nodeType":"75","messageId":"76","endLine":22,"endColumn":17},{"ruleId":"73","severity":1,"message":"78","line":33,"column":10,"nodeType":"75","messageId":"76","endLine":33,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":63,"column":5,"nodeType":"81","messageId":"82","endLine":68,"endColumn":4},{"ruleId":"73","severity":1,"message":"83","line":88,"column":13,"nodeType":"75","messageId":"76","endLine":88,"endColumn":18},{"ruleId":"84","severity":1,"message":"85","line":149,"column":10,"nodeType":"86","endLine":149,"endColumn":12,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":154,"column":34,"nodeType":"90","messageId":"91","endLine":154,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":202,"column":67,"nodeType":"94","messageId":"91","endLine":202,"endColumn":74},{"ruleId":"88","severity":1,"message":"89","line":215,"column":43,"nodeType":"90","messageId":"91","endLine":215,"endColumn":45},{"ruleId":"92","severity":1,"message":"93","line":243,"column":130,"nodeType":"94","messageId":"91","endLine":243,"endColumn":137},{"ruleId":"73","severity":1,"message":"95","line":7,"column":10,"nodeType":"75","messageId":"76","endLine":7,"endColumn":19},{"ruleId":"73","severity":1,"message":"77","line":148,"column":12,"nodeType":"75","messageId":"76","endLine":148,"endColumn":19},{"ruleId":"84","severity":1,"message":"96","line":45,"column":12,"nodeType":"86","endLine":45,"endColumn":14,"suggestions":"97"},{"ruleId":"84","severity":1,"message":"98","line":122,"column":6,"nodeType":"86","endLine":122,"endColumn":8,"suggestions":"99"},{"ruleId":"84","severity":1,"message":"98","line":122,"column":6,"nodeType":"86","endLine":122,"endColumn":8,"suggestions":"100"},{"ruleId":"88","severity":1,"message":"89","line":36,"column":49,"nodeType":"90","messageId":"91","endLine":36,"endColumn":51},"no-unused-vars","'Tresd' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'mastery' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'call2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'apikey', 'elnombre', 'jug', 'laregion', and 'summonerId'. Either include them or remove the dependency array.","ArrayExpression",["101"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'display'.","ObjectExpression","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'campeonId'. Either include it or remove the dependency array.",["102"],"React Hook useEffect has a missing dependency: 'renderer'. Either include it or remove the dependency array.",["103"],["104"],{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"109","fix":"111"},"Update the dependencies array to be: [apikey, elnombre, jug, laregion, summonerId]",{"range":"112","text":"113"},"Update the dependencies array to be: [campeonId]",{"range":"114","text":"115"},"Update the dependencies array to be: [renderer]",{"range":"116","text":"117"},{"range":"118","text":"117"},[4400,4402],"[apikey, elnombre, jug, laregion, summonerId]",[1842,1844],"[campeonId]",[3489,3491],"[renderer]",[3489,3491]]