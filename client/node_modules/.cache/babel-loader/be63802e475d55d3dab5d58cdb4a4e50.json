{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tojed\\\\lol\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; //import {setState} from 'react';\n\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [gameList, setGameList] = useState([]);\n  const [playerData, setPlayerData] = useState([]);\n  const apikey = \"RGAPI-e328c68b-3adb-4c1a-bccb-2e2388f4b5de\";\n\n  function searchForPlayer(event) {\n    var call = \"https://la2.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" + searchText + \"?api_key=\" + apikey;\n    axios.get(call).then(function (response) {\n      setPlayerData(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  console.log(playerData);\n\n  function getPlayerGames(event, name) {\n    axios.get(\"http://localhost:4000/match/\" + name).then(function (response) {\n      setGameList(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } //console.log(gameList);\n  //  <button onClick={e => getPlayerGames(e,searchText)}>Buscar ultims 5 partidas de un jugador</button>\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setSearchText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => searchForPlayer(searchText),\n        ondblclick: getPlayerGames(playerData.name),\n        children: \"Buscar un jugador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), JSON.stringify(playerData) !== '{}' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", playerData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", playerData.summonerLevel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }, this), gameList.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" tenemos partidas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 12\n        }, this), gameList.map((gameData, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\" Game \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: gameData.info.participants.map((data, participantIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"JUGADOR \", participantIndex + 1, \": \", data.summonerName, \", KDA: \", data.kills, \"/\", data.deaths, \"/\", data.assists, \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" no tenemos partidas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 12\n        }, this), gameList.map((gameData, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\" Game \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: gameData.info.participants.map((data, participantIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"JUGADOR \", participantIndex + 1, \": \", data.summonerName, \", KDA: \", data.kills, \"/\", data.deaths, \"/\", data.assists, \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no tenemos datos del jugador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), gameList.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" tenemos partidas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 12\n      }, this), gameList.map((gameData, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" Game \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: gameData.info.participants.map((data, participantIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"JUGADOR \", participantIndex + 1, \": \", data.summonerName, \", KDA: \", data.kills, \"/\", data.deaths, \"/\", data.assists, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" no tenemos partidas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 12\n      }, this), gameList.map((gameData, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" Game \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: gameData.info.participants.map((data, participantIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"JUGADOR \", participantIndex + 1, \": \", data.summonerName, \", KDA: \", data.kills, \"/\", data.deaths, \"/\", data.assists, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true))]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tmMao90jXqn4Wf09jMAFSX+R0Yg=\");\n\n_c = App;\nexport default App;\n/*\r\n<select id=\"m\" value={reg} onChange={e => setRegion(e.target.value)}>\r\n<option value=\"br1\">BRASIL</option>\r\n<option value=\"kr\">COREA</option>\r\n<option value=\"eun1\">EUROPA NÓRDICA Y ESTE</option>\r\n<option value=\"euw1\">EUROPA OESTE</option>\r\n<option value=\"jp1\">JAPÓN</option>\r\n<option value=\"la1\">LATINOAMÉRICA NORTE</option>\r\n<option value=\"la2\">LATINOAMÉRICA SUR</option>\r\n<option value=\"na1\">NORTEAMÉRICA</option>\r\n<option value=\"oc1\">OCEANÍA</option>\r\n<option value=\"ru\">RUSIA</option>\r\n<option value=\"tr1\">TURQUÍA</option> \r\n</select>*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","App","searchText","setSearchText","gameList","setGameList","playerData","setPlayerData","apikey","searchForPlayer","event","call","get","then","response","data","catch","error","console","log","getPlayerGames","name","e","target","value","JSON","stringify","summonerLevel","length","map","gameData","index","info","participants","participantIndex","summonerName","kills","deaths","assists"],"sources":["C:/Users/tojed/lol/client/src/App.js"],"sourcesContent":["import {useState} from 'react';\r\n//import {setState} from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [gameList, setGameList] = useState([]); \r\n  const [playerData, setPlayerData] = useState([]);\r\n  const apikey = \"RGAPI-e328c68b-3adb-4c1a-bccb-2e2388f4b5de\";\r\n\r\n  function searchForPlayer(event){\r\n        var call = \"https://la2.api.riotgames.com/lol/summoner/v4/summoners/by-name/\"+searchText+\"?api_key=\"+apikey;\r\n        axios.get(call).then(function(response){\r\n          setPlayerData(response.data);\r\n        }).catch(function(error){\r\n          console.log(error);\r\n        });\r\n      }\r\n  \r\n      console.log(playerData);\r\n\r\n  function getPlayerGames(event, name){\r\n    axios.get(\"http://localhost:4000/match/\"+name)\r\n      .then(function(response){\r\n        setGameList(response.data);\r\n      }).catch(function(error){\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  //console.log(gameList);\r\n \r\n   //  <button onClick={e => getPlayerGames(e,searchText)}>Buscar ultims 5 partidas de un jugador</button>\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <input type=\"text\" onChange={e => setSearchText(e.target.value)} ></input>\r\n\r\n      <div className=\"container\">\r\n      <button onClick={e => searchForPlayer(searchText)} ondblclick={getPlayerGames(playerData.name)}>Buscar un jugador</button>\r\n      </div>\r\n       {JSON.stringify(playerData) !== '{}' ? <>\r\n       <p> {playerData.name}</p>\r\n       <p> {playerData.summonerLevel}</p>\r\n    \r\n       {gameList.length !==0 ?\r\n          <>\r\n           <p> tenemos partidas</p>\r\n           {\r\n              gameList.map((gameData,index) =>\r\n                <>\r\n                 <h2> Game {index +1}</h2>\r\n                 <div>\r\n                  {gameData.info.participants.map((data,participantIndex)=> \r\n                  <p>JUGADOR {participantIndex+1}: {data.summonerName}, KDA: {data.kills}/{data.deaths}/{data.assists}  </p>\r\n                  )\r\n                    }\r\n                    </div>\r\n                </>\r\n              )\r\n\r\n           }\r\n          </>\r\n          :\r\n          <>\r\n           <p> no tenemos partidas</p>\r\n           {\r\n              gameList.map((gameData,index) =>\r\n                <>\r\n                 <h2> Game {index +1}</h2>\r\n                 <div>\r\n                  {gameData.info.participants.map((data,participantIndex)=> \r\n                  <p>JUGADOR {participantIndex+1}: {data.summonerName}, KDA: {data.kills}/{data.deaths}/{data.assists}  </p>\r\n                  )\r\n                    }\r\n                    </div>\r\n                </>\r\n              )\r\n\r\n           }\r\n          </>\r\n       }\r\n       \r\n       </>\r\n       :\r\n        <><p>no tenemos datos del jugador</p></>\r\n\r\n       }\r\n\r\n       \r\n      {gameList.length !==0 ?\r\n          <>\r\n           <p> tenemos partidas</p>\r\n           {\r\n              gameList.map((gameData,index) =>\r\n                <>\r\n                 <h2> Game {index +1}</h2>\r\n                 <div>\r\n                  {gameData.info.participants.map((data,participantIndex)=> \r\n                  <p>JUGADOR {participantIndex+1}: {data.summonerName}, KDA: {data.kills}/{data.deaths}/{data.assists}  </p>\r\n                  )\r\n                    }\r\n                    </div>\r\n                </>\r\n              )\r\n\r\n           }\r\n          </>\r\n          :\r\n          <>\r\n           <p> no tenemos partidas</p>\r\n           {\r\n              gameList.map((gameData,index) =>\r\n                <>\r\n                 <h2> Game {index +1}</h2>\r\n                 <div>\r\n                  {gameData.info.participants.map((data,participantIndex)=> \r\n                  <p>JUGADOR {participantIndex+1}: {data.summonerName}, KDA: {data.kills}/{data.deaths}/{data.assists}  </p>\r\n                  )\r\n                    }\r\n                    </div>\r\n                </>\r\n              )\r\n\r\n           }\r\n          </>\r\n       }\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*\r\n<select id=\"m\" value={reg} onChange={e => setRegion(e.target.value)}>\r\n<option value=\"br1\">BRASIL</option>\r\n<option value=\"kr\">COREA</option>\r\n<option value=\"eun1\">EUROPA NÓRDICA Y ESTE</option>\r\n<option value=\"euw1\">EUROPA OESTE</option>\r\n<option value=\"jp1\">JAPÓN</option>\r\n<option value=\"la1\">LATINOAMÉRICA NORTE</option>\r\n<option value=\"la2\">LATINOAMÉRICA SUR</option>\r\n<option value=\"na1\">NORTEAMÉRICA</option>\r\n<option value=\"oc1\">OCEANÍA</option>\r\n<option value=\"ru\">RUSIA</option>\r\n<option value=\"tr1\">TURQUÍA</option> \r\n</select>*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}